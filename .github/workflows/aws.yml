# This workflow will build and push a new container image to Amazon ECR,

name: Push Docker Image to Amazon ECR

on:
  push:
    branches: [ "master" ]

permissions:
      id-token: write
      contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      env:
        AWS_REGION: ${{ secrets.MY_AWS_REGION }}            # set this to your preferred AWS region, e.g. us-west-1
        ECR_REPOSITORY: ${{ secrets.MY_ECR_REPOSITORY }}          # set this to your Amazon ECR repository name
        ECR_REGISTRY: ${{ secrets.MY_ECR_REGISTRY }}              # set this to your Amazon ECR registry address
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.ARN_ACCESS }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"
        echo "All pushed and done"
